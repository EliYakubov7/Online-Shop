[{"C:\\Projects Github\\Shopit\\frontend\\src\\index.js":"1","C:\\Projects Github\\Shopit\\frontend\\src\\App.js":"2","C:\\Projects Github\\Shopit\\frontend\\src\\components\\layout\\Header.js":"3","C:\\Projects Github\\Shopit\\frontend\\src\\components\\layout\\Footer.js":"4","C:\\Projects Github\\Shopit\\frontend\\src\\components\\Home.js":"5","C:\\Projects Github\\Shopit\\frontend\\src\\components\\layout\\MetaData.js":"6","C:\\Projects Github\\Shopit\\frontend\\src\\store.js":"7","C:\\Projects Github\\Shopit\\frontend\\src\\reducers\\productReducers.js":"8","C:\\Projects Github\\Shopit\\frontend\\src\\constants\\productConstants.js":"9","C:\\Projects Github\\Shopit\\frontend\\src\\actions\\productActions.js":"10","C:\\Projects Github\\Shopit\\frontend\\src\\components\\product\\Product.js":"11","C:\\Projects Github\\Shopit\\frontend\\src\\components\\layout\\Loader.js":"12","C:\\Projects Github\\Shopit\\frontend\\src\\components\\product\\ProductDetails.js":"13","C:\\Projects Github\\Shopit\\frontend\\src\\components\\layout\\Search.js":"14","C:\\Projects Github\\Shopit\\frontend\\src\\components\\cart\\Cart.js":"15","C:\\Projects Github\\Shopit\\frontend\\src\\components\\cart\\Shipping.js":"16","C:\\Projects Github\\Shopit\\frontend\\src\\components\\cart\\ConfirmOrder.js":"17","C:\\Projects Github\\Shopit\\frontend\\src\\components\\cart\\Payment.js":"18","C:\\Projects Github\\Shopit\\frontend\\src\\components\\user\\Register.js":"19","C:\\Projects Github\\Shopit\\frontend\\src\\components\\cart\\OrderSuccess.js":"20","C:\\Projects Github\\Shopit\\frontend\\src\\components\\order\\OrderDetails.js":"21","C:\\Projects Github\\Shopit\\frontend\\src\\components\\order\\ListOrders.js":"22","C:\\Projects Github\\Shopit\\frontend\\src\\components\\user\\Profile.js":"23","C:\\Projects Github\\Shopit\\frontend\\src\\components\\user\\ForgotPassword.js":"24","C:\\Projects Github\\Shopit\\frontend\\src\\components\\user\\UpdatePassword.js":"25","C:\\Projects Github\\Shopit\\frontend\\src\\actions\\userActions.js":"26","C:\\Projects Github\\Shopit\\frontend\\src\\components\\user\\NewPassword.js":"27","C:\\Projects Github\\Shopit\\frontend\\src\\reducers\\cartReducers.js":"28","C:\\Projects Github\\Shopit\\frontend\\src\\reducers\\orderReducers.js":"29","C:\\Projects Github\\Shopit\\frontend\\src\\components\\route\\ProtectedRoute.js":"30","C:\\Projects Github\\Shopit\\frontend\\src\\components\\user\\Login.js":"31","C:\\Projects Github\\Shopit\\frontend\\src\\components\\user\\UpdateProfile.js":"32","C:\\Projects Github\\Shopit\\frontend\\src\\actions\\cartActions.js":"33","C:\\Projects Github\\Shopit\\frontend\\src\\components\\cart\\CheckoutSteps.js":"34","C:\\Projects Github\\Shopit\\frontend\\src\\actions\\orderActions.js":"35","C:\\Projects Github\\Shopit\\frontend\\src\\components\\review\\ListReviews.js":"36","C:\\Projects Github\\Shopit\\frontend\\src\\constants\\userConstants.js":"37","C:\\Projects Github\\Shopit\\frontend\\src\\constants\\cartConstants.js":"38","C:\\Projects Github\\Shopit\\frontend\\src\\constants\\orderConstants.js":"39","C:\\Projects Github\\Shopit\\frontend\\src\\reducers\\userReducers.js":"40","C:\\Projects Github\\Shopit\\frontend\\src\\components\\admin\\Dashboard.js":"41","C:\\Projects Github\\Shopit\\frontend\\src\\components\\admin\\Sidebar.js":"42","C:\\Projects Github\\Shopit\\frontend\\src\\components\\admin\\ProductsList.js":"43","C:\\Projects Github\\Shopit\\frontend\\src\\components\\admin\\OrdersList.js":"44","C:\\Projects Github\\Shopit\\frontend\\src\\components\\admin\\ProcessOrder.js":"45","C:\\Projects Github\\Shopit\\frontend\\src\\components\\admin\\NewProduct.js":"46","C:\\Projects Github\\Shopit\\frontend\\src\\components\\admin\\UpdateUser.js":"47","C:\\Projects Github\\Shopit\\frontend\\src\\components\\admin\\UsersList.js":"48","C:\\Projects Github\\Shopit\\frontend\\src\\components\\admin\\UpdateProduct.js":"49","C:\\Projects Github\\Shopit\\frontend\\src\\components\\admin\\ProductReviews.js":"50"},{"size":589,"mtime":1615205329000,"results":"51","hashOfConfig":"52"},{"size":4811,"mtime":1615205329000,"results":"53","hashOfConfig":"52"},{"size":4509,"mtime":1615584455434,"results":"54","hashOfConfig":"52"},{"size":344,"mtime":1615205329000,"results":"55","hashOfConfig":"52"},{"size":11202,"mtime":1615583412989,"results":"56","hashOfConfig":"52"},{"size":229,"mtime":1615205329000,"results":"57","hashOfConfig":"52"},{"size":1734,"mtime":1615205329000,"results":"58","hashOfConfig":"52"},{"size":6961,"mtime":1615205329000,"results":"59","hashOfConfig":"52"},{"size":1905,"mtime":1615205329000,"results":"60","hashOfConfig":"52"},{"size":6132,"mtime":1615247427262,"results":"61","hashOfConfig":"52"},{"size":1654,"mtime":1615583544193,"results":"62","hashOfConfig":"52"},{"size":134,"mtime":1615205329000,"results":"63","hashOfConfig":"52"},{"size":14491,"mtime":1615583645047,"results":"64","hashOfConfig":"52"},{"size":1019,"mtime":1615583456043,"results":"65","hashOfConfig":"52"},{"size":4604,"mtime":1615583590227,"results":"66","hashOfConfig":"52"},{"size":4762,"mtime":1615205329000,"results":"67","hashOfConfig":"52"},{"size":5378,"mtime":1615583625890,"results":"68","hashOfConfig":"52"},{"size":5619,"mtime":1615583632433,"results":"69","hashOfConfig":"52"},{"size":5629,"mtime":1615205329000,"results":"70","hashOfConfig":"52"},{"size":732,"mtime":1615205329000,"results":"71","hashOfConfig":"52"},{"size":3770,"mtime":1615583637839,"results":"72","hashOfConfig":"52"},{"size":2952,"mtime":1615583641042,"results":"73","hashOfConfig":"52"},{"size":2587,"mtime":1615583724572,"results":"74","hashOfConfig":"52"},{"size":2198,"mtime":1615205329000,"results":"75","hashOfConfig":"52"},{"size":3101,"mtime":1615583445683,"results":"76","hashOfConfig":"52"},{"size":7420,"mtime":1615205329000,"results":"77","hashOfConfig":"52"},{"size":2924,"mtime":1615205329000,"results":"78","hashOfConfig":"52"},{"size":1107,"mtime":1615205329000,"results":"79","hashOfConfig":"52"},{"size":4375,"mtime":1615205329000,"results":"80","hashOfConfig":"52"},{"size":920,"mtime":1615205329000,"results":"81","hashOfConfig":"52"},{"size":3377,"mtime":1615205329000,"results":"82","hashOfConfig":"52"},{"size":5709,"mtime":1615583853487,"results":"83","hashOfConfig":"52"},{"size":1093,"mtime":1615205329000,"results":"84","hashOfConfig":"52"},{"size":1844,"mtime":1615205329000,"results":"85","hashOfConfig":"52"},{"size":3664,"mtime":1615205329000,"results":"86","hashOfConfig":"52"},{"size":714,"mtime":1615205329000,"results":"87","hashOfConfig":"52"},{"size":2213,"mtime":1615205329000,"results":"88","hashOfConfig":"52"},{"size":146,"mtime":1615205329000,"results":"89","hashOfConfig":"52"},{"size":1160,"mtime":1615205329000,"results":"90","hashOfConfig":"52"},{"size":6373,"mtime":1615205329000,"results":"91","hashOfConfig":"52"},{"size":7771,"mtime":1615583529273,"results":"92","hashOfConfig":"52"},{"size":2242,"mtime":1615583957061,"results":"93","hashOfConfig":"52"},{"size":4133,"mtime":1615583597618,"results":"94","hashOfConfig":"52"},{"size":4255,"mtime":1615583594386,"results":"95","hashOfConfig":"52"},{"size":6278,"mtime":1615583582351,"results":"96","hashOfConfig":"52"},{"size":8197,"mtime":1615205329000,"results":"97","hashOfConfig":"52"},{"size":4587,"mtime":1615205329000,"results":"98","hashOfConfig":"52"},{"size":3543,"mtime":1615205329000,"results":"99","hashOfConfig":"52"},{"size":9264,"mtime":1615205329000,"results":"100","hashOfConfig":"52"},{"size":5063,"mtime":1615205329000,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"bkcqg6",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"104"},"C:\\Projects Github\\Shopit\\frontend\\src\\index.js",[],["208","209"],"C:\\Projects Github\\Shopit\\frontend\\src\\App.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\layout\\Header.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\layout\\Footer.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\Home.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\layout\\MetaData.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\store.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\constants\\productConstants.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\actions\\productActions.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\product\\Product.js",["210"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Product = ({ product, col }) => {\n    return (\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\n            <div className=\"card p-3 rounded\">\n                <img\n                    className=\"card-img-top mx-auto\"\n                    src={product.images[0].url}\n                />\n                <div className=\"card-body d-flex flex-column\">\n                    <h5 className=\"card-title\">\n                        <Link to={`/product/${product._id}`}>\n                            {product.name}\n                        </Link>\n                    </h5>\n                    <div className=\"ratings mt-auto\">\n                        <div className=\"rating-outer\">\n                            <div\n                                className=\"rating-inner\"\n                                style={{\n                                    width: `${(product.ratings / 5) * 100}%`,\n                                }}\n                            ></div>\n                        </div>\n                        <span id=\"no_of_reviews\">\n                            ({product.numOfReviews} Reviews)\n                        </span>\n                    </div>\n                    <p className=\"card-text\">${product.price}</p>\n                    <Link\n                        to={`/product/${product._id}`}\n                        id=\"view_btn\"\n                        className=\"btn btn-block\"\n                    >\n                        View Details\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Product;\n","C:\\Projects Github\\Shopit\\frontend\\src\\components\\layout\\Loader.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\product\\ProductDetails.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\layout\\Search.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\cart\\Cart.js",["211"],"import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\n\nconst Cart = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    const { cartItems } = useSelector(state => state.cart)\n\n    const removeCartItemHandler = (id) => {\n        dispatch(removeItemFromCart(id))\n    }\n\n    const increaseQty = (id, quantity, stock) => {\n        const newQty = quantity + 1;\n\n        if (newQty > stock) return;\n\n        dispatch(addItemToCart(id, newQty))\n    }\n\n    const decreaseQty = (id, quantity) => {\n\n        const newQty = quantity - 1;\n\n        if (newQty <= 0) return;\n\n        dispatch(addItemToCart(id, newQty))\n\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Your Cart'} />\n            {cartItems.length === 0 ? <h2 className=\"mt-5\">Your Cart is Empty</h2> : (\n                <Fragment>\n                    <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\n\n                    <div className=\"row d-flex justify-content-between\">\n                        <div className=\"col-12 col-lg-8\">\n\n                            {cartItems.map(item => (\n                                <Fragment>\n                                    <hr />\n\n                                    <div className=\"cart-item\" key={item.product}>\n                                        <div className=\"row\">\n                                            <div className=\"col-4 col-lg-3\">\n                                                <img src={item.image} alt=\"Laptop\" height=\"90\" width=\"115\" />\n                                            </div>\n\n                                            <div className=\"col-5 col-lg-3\">\n                                                <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                            </div>\n\n\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                                <p id=\"card_item_price\">${item.price}</p>\n                                            </div>\n\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                                <div className=\"stockCounter d-inline\">\n                                                    <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.product, item.quantity)}>-</span>\n\n                                                    <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\n\n                                                    <span className=\"btn btn-primary plus\" onClick={() => increaseQty(item.product, item.quantity, item.stock)}>+</span>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.product)} ></i>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                    <hr />\n                                </Fragment>\n                            ))}\n\n                        </div>\n\n                        <div className=\"col-12 col-lg-3 my-4\">\n                            <div id=\"order_summary\">\n                                <h4>Order Summary</h4>\n                                <hr />\n                                <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\n                                <p>Est. total: <span className=\"order-summary-values\">${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\n\n                                <hr />\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\n                            </div>\n                        </div>\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Cart\n","C:\\Projects Github\\Shopit\\frontend\\src\\components\\cart\\Shipping.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\cart\\ConfirmOrder.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\cart\\Payment.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\user\\Register.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\cart\\OrderSuccess.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\order\\OrderDetails.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\order\\ListOrders.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\user\\Profile.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\user\\ForgotPassword.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\user\\UpdatePassword.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\actions\\userActions.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\user\\NewPassword.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\user\\Login.js",["212"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Loader from '../layout/Loader'\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login, clearErrors } from '../../actions/userActions'\n\nconst Login = ({ history, location }) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n\n        if (isAuthenticated) {\n            history.push(redirect)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password))\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Login'} />\n\n                    <div className=\"row wrapper\">\n                        <div className=\"col-10 col-lg-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                                <h1 className=\"mb-3\">Login</h1>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email_field\">Email</label>\n                                    <input\n                                        type=\"email\"\n                                        id=\"email_field\"\n                                        className=\"form-control\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password_field\">Password</label>\n                                    <input\n                                        type=\"password\"\n                                        id=\"password_field\"\n                                        className=\"form-control\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                </div>\n\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                >\n                                    LOGIN\n                                </button>\n\n                                <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\n                            </form>\n                        </div>\n                    </div>\n\n\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Login\n","C:\\Projects Github\\Shopit\\frontend\\src\\components\\user\\UpdateProfile.js",["213"],"import React, { Fragment, useState, useEffect } from 'react';\n\nimport MetaData from '../layout/MetaData';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    updateProfile,\n    loadUser,\n    clearErrors,\n} from '../../actions/userActions';\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants';\n\nconst UpdateProfile = ({ history }) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [avatar, setAvatar] = useState('');\n    const [avatarPreview, setAvatarPreview] = useState(\n        '/images/default_avatar.jpg'\n    );\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user } = useSelector((state) => state.auth);\n    const { error, isUpdated, loading } = useSelector((state) => state.user);\n\n    useEffect(() => {\n        if (user) {\n            setName(user.name);\n            setEmail(user.email);\n            setAvatarPreview(user.avatar.url);\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('User updated successfully');\n            dispatch(loadUser());\n\n            history.push('/me');\n\n            dispatch({\n                type: UPDATE_PROFILE_RESET,\n            });\n        }\n    }, [dispatch, alert, error, history, isUpdated]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('avatar', avatar);\n\n        dispatch(updateProfile(formData));\n    };\n\n    const onChange = (e) => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setAvatarPreview(reader.result);\n                setAvatar(reader.result);\n            }\n        };\n\n        reader.readAsDataURL(e.target.files[0]);\n    };\n    return (\n        <Fragment>\n            <MetaData title={'Update Profile'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form\n                        className=\"shadow-lg\"\n                        onSubmit={submitHandler}\n                        encType=\"multipart/form-data\"\n                    >\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input\n                                type=\"name\"\n                                id=\"name_field\"\n                                className=\"form-control\"\n                                name=\"name\"\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name=\"email\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"avatar_upload\">Avatar</label>\n                            <div className=\"d-flex align-items-center\">\n                                <div>\n                                    <figure className=\"avatar mr-3 item-rtl\">\n                                        <img\n                                            src={avatarPreview}\n                                            className=\"rounded-circle\"\n                                            alt=\"Avatar Preview\"\n                                        />\n                                    </figure>\n                                </div>\n                                <div className=\"custom-file\">\n                                    <input\n                                        type=\"file\"\n                                        name=\"avatar\"\n                                        className=\"custom-file-input\"\n                                        id=\"customFile\"\n                                        accept=\"image/*\"\n                                        onChange={onChange}\n                                    />\n                                    <label\n                                        style={{\n                                            textAlign: 'center',\n                                        }}\n                                        className=\"custom-file-label\"\n                                        htmlFor=\"customFile\"\n                                    >\n                                        Choose Avatar\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button\n                            type=\"submit\"\n                            className=\"btn update-btn btn-block mt-4 mb-3\"\n                            disabled={loading ? true : false}\n                        >\n                            Update\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default UpdateProfile;\n","C:\\Projects Github\\Shopit\\frontend\\src\\actions\\cartActions.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\cart\\CheckoutSteps.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\actions\\orderActions.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\review\\ListReviews.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\constants\\userConstants.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\admin\\Dashboard.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\admin\\Sidebar.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\admin\\ProductsList.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\admin\\OrdersList.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\admin\\ProcessOrder.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\admin\\NewProduct.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\admin\\UpdateUser.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\admin\\UsersList.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\admin\\UpdateProduct.js",[],"C:\\Projects Github\\Shopit\\frontend\\src\\components\\admin\\ProductReviews.js",["214"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductReviews, deleteReview, clearErrors } from '../../actions/productActions'\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants'\n\nconst ProductReviews = () => {\n\n    const [productId, setProductId] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, reviews } = useSelector(state => state.productReviews);\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors())\n        }\n\n        if (productId !== '') {\n            dispatch(getProductReviews(productId))\n        }\n\n        if (isDeleted) {\n            alert.success('Review deleted successfully');\n            dispatch({ type: DELETE_REVIEW_RESET })\n        }\n\n\n\n    }, [dispatch, alert, error, productId, isDeleted, deleteError])\n\n    const deleteReviewHandler = (id) => {\n        dispatch(deleteReview(id, productId))\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(getProductReviews(productId))\n    }\n\n    const setReviews = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Review ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Rating',\n                    field: 'rating',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Comment',\n                    field: 'comment',\n                    sort: 'asc'\n                },\n                {\n                    label: 'User',\n                    field: 'user',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        reviews.forEach(review => {\n            data.rows.push({\n                id: review._id,\n                rating: review.rating,\n                comment: review.comment,\n                user: review.name,\n\n                actions:\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n            })\n        })\n\n        return data;\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Product Reviews'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"row justify-content-center mt-5\">\n                            <div className=\"col-5\">\n                                <form onSubmit={submitHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"productId_field\"\n                                            className=\"form-control\"\n                                            value={productId}\n                                            onChange={(e) => setProductId(e.target.value)}\n                                        />\n                                    </div>\n\n                                    <button\n                                        id=\"search_button\"\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block py-2\"\n                                    >\n                                        SEARCH\n\t\t\t\t\t\t\t\t    </button>\n                                </ form>\n                            </div>\n\n                        </div>\n\n                        {reviews && reviews.length > 0 ? (\n                            <MDBDataTable\n                                data={setReviews()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        ) : (\n                                <p className=\"mt-5 text-center\">No Reviews.</p>\n                            )}\n\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProductReviews\n",{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":8,"column":17,"nodeType":"221","endLine":11,"endColumn":19},{"ruleId":"222","severity":1,"message":"223","line":6,"column":10,"nodeType":"224","messageId":"225","endLine":6,"endColumn":18},{"ruleId":"226","severity":1,"message":"227","line":34,"column":8,"nodeType":"228","endLine":34,"endColumn":58,"suggestions":"229"},{"ruleId":"226","severity":1,"message":"230","line":50,"column":8,"nodeType":"228","endLine":50,"endColumn":52,"suggestions":"231"},{"ruleId":"222","severity":1,"message":"232","line":5,"column":8,"nodeType":"224","messageId":"225","endLine":5,"endColumn":14},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useAlert' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.","ArrayExpression",["235"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["236"],"'Loader' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"241","text":"242"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"243","text":"244"},[914,964],"[dispatch, alert, isAuthenticated, error, history, redirect]",[1363,1407],"[dispatch, alert, error, history, isUpdated, user]"]